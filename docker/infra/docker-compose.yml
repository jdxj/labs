networks:
  my_net:
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}

volumes:
  syncthing:
    name: syncthing
  sing-box:
    name: sing-box
  mysql:
    name: mysql
  qbittorrent-nox:
    name: qbittorrent-nox
  filecodebox:
    name: filecodebox

services:
  my_mysql:
    image: mysql:9
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
      - TZ=Asia/Shanghai
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${MYSQL_IP}
    volumes:
      - type: bind
        source: ${MYSQL_CONF_PATH}
        target: /etc/mysql/conf.d
        read_only: true
      - type: volume
        source: mysql
        target: /var/lib/mysql
        read_only: false
  my_redis:
    image: redis:7
    command: [ redis-server, /usr/local/etc/redis/redis.conf ]
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${REDIS_IP}
    volumes:
      - type: bind
        source: ${REDIS_CONF_PATH}
        target: /usr/local/etc/redis
        read_only: true
  my_rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${RABBITMQ_IP}
  my_postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - TZ=Asia/Shanghai
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER" ]
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${POSTGRES_IP}
    volumes:
      - type: bind
        source: ${POSTGRES_DATA}
        target: /var/lib/postgresql/data
        read_only: false
  my_nginx:
    image: nginx:alpine-slim
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
    network_mode: host
    volumes:
      - type: bind
        source: ${NGINX_LOGS_PATH}
        target: /var/log/nginx
        read_only: false
      - type: bind
        source: ${NGINX_LIVE_PATH}
        target: /etc/letsencrypt
        read_only: true
      - type: bind
        source: ${NGINX_CONFIG}
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: ${NGINX_CONF_D_PATH}
        target: /etc/nginx/conf.d
        read_only: true
      - type: bind
        source: ${NGINX_STATIC_PATH}
        target: /etc/nginx/static
        read_only: true
      - type: bind
        source: ${NGINX_APP_PATH}
        target: /etc/nginx/app
        read_only: true
  my_syncthing:
    image: syncthing/syncthing:latest
    hostname: remote-sync
    environment:
      - STGUIADDRESS=
    network_mode: host
    restart: unless-stopped
    volumes:
      - syncthing:/var/syncthing
  my_qbittorrent-nox:
    environment:
      - QBT_LEGAL_NOTICE=confirm
      - QBT_VERSION=latest
      - QBT_WEBUI_PORT=8080
      - TZ=Asia/Shanghai
    image: qbittorrentofficial/qbittorrent-nox:latest
    network_mode: host
    read_only: true
    stop_grace_period: 30m
    tmpfs:
      - /tmp
    tty: true
    volumes:
      - type: volume
        source: qbittorrent-nox
        target: /config
        read_only: false
      - type: bind
        source: ${NGINX_STATIC_PATH}
        target: /downloads
        read_only: false
    restart: unless-stopped
  my_linkding:
    image: sissbruecker/linkding:latest
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${LINKDING_IP}
    volumes:
      - ${LD_HOST_DATA_DIR}:/etc/linkding/data
  my_fusion:
    image: rook1e404/fusion:latest
    environment:
      - PASSWORD=${FUSION_PASSWORD}
    volumes:
      - type: bind
        source: ${FUSION_DATA}
        target: /data
        read_only: false
    networks:
      my_net:
        ipv4_address: ${FUSION_IP}
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
  my_vanblog:
    container_name: vanblog
    image: mereith/van-blog:latest
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - EMAIL=${EMAIL}
    volumes:
      - ${VANBLOG_STATIC}:/app/static
      - ${VANBLOG_LOG}:/var/log
      - ${VANBLOG_CONFIG}:/root/.config/caddy
      - ${VANBLOG_DATA}:/root/.local/share/caddy
    ports:
      - 80:80
      - 443:443
  my_mongo:
    container_name: mongo
    image: mongo:latest
    restart: always
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ${VANBLOG_DB}:/data/db
  my_maddy:
    image: foxcpp/maddy:latest
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${MADDY_IP}
    environment:
      - MADDY_HOSTNAME=${MADDY_HOSTNAME}
      - MADDY_DOMAIN=${MADDY_DOMAIN}
    ports:
      - 25:25
      - 143:143
      - 465:465
      - 587:587
      - 993:993
    volumes:
      - type: bind
        source: ${MADDY_DATA}
        target: /data
        read_only: false
      - type: bind
        source: ${MADDY_CERTS}
        target: /etc/maddy/certs
        read_only: true
  my_ethr:
    image: jdxj/ethr
    restart: unless-stopped
    network_mode: host
    command: [ "ethr","-s", "-no" ]
  my_filecodebox:
    image: lanol/filecodebox:beta
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${FILECODEBOX_IP}
    volumes:
      - type: volume
        source: filecodebox
        target: /app/data
        read_only: false
