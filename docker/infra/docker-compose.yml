networks:
  my_net:
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}

volumes:
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
  acme:
    name: acme

services:
  my_mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
      - TZ=Asia/Shanghai
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${MYSQL_IP}
    volumes:
      - type: bind
        source: ${MYSQL_CONF_PATH}
        target: /etc/mysql/conf.d
        read_only: true
  my_redis:
    image: redis:7
    command: [ redis-server, /usr/local/etc/redis/redis.conf ]
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${REDIS_IP}
    volumes:
      - type: bind
        source: ${REDIS_CONF_PATH}
        target: /usr/local/etc/redis
        read_only: true
  my_rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${RABBITMQ_IP}
  my_postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - TZ=Asia/Shanghai
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER" ]
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${POSTGRES_IP}
    volumes:
      - type: bind
        source: ${POSTGRES_DATA}
        target: /var/lib/postgresql/data
        read_only: false
  my_nginx:
    image: nginx:alpine-slim
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
    network_mode: host
    volumes:
      - type: bind
        source: ${NGINX_LOGS_PATH}
        target: /var/log/nginx
        read_only: false
      - type: bind
        source: ${NGINX_LIVE_PATH}
        target: /etc/letsencrypt
        read_only: true
      - type: bind
        source: ${NGINX_CONFIG}
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: ${NGINX_CONF_D_PATH}
        target: /etc/nginx/conf.d
        read_only: true
  my_miniflux:
    image: miniflux/miniflux:latest
    depends_on:
      my_postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASS}@${POSTGRES_IP}:5432/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${MINIFLUX_USER}
      - ADMIN_PASSWORD=${MINIFLUX_PASS}
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${MINIFLUX_IP}
  my_memos:
    image: ghcr.io/usememos/memos:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: ${MEMOS_CONF_PATH}
        target: /var/opt/memos
        read_only: false
    networks:
      my_net:
        ipv4_address: ${MEMOS_IP}
  my_shirley:
    image: jdxj/shirley:467eb09f
    command: [ /app/main ]
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${SHIRLEY_IP}
    volumes:
      - type: bind
        source: ${SHIRLEY_CONFIG_PATH}
        target: /app/config
        read_only: true
      - type: bind
        source: ${SHIRLEY_LOG_PATH}
        target: /app/log
        read_only: false
  my_wordpress:
    image: wordpress:latest
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=${MYSQL_IP}
      - WORDPRESS_DB_USER=root
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASS}
    networks:
      my_net:
        ipv4_address: ${WORDPRESS_IP}
    volumes:
      - type: bind
        source: ${WORDPRESS_HTML}
        target: /var/www/html
        read_only: false
  my_stackedit:
    image: benweet/stackedit:latest
    restart: unless-stopped
    networks:
      my_net:
        ipv4_address: ${STACKEDIT_IP}
  my_sourceforge-dl:
    image: jdxj/sourceforge-dl:0.1.0
    restart: unless-stopped
    environment:
      - RUST_LOG=reqwest=trace,sourceforge_dl=debug
    command:
      - /sourceforge-downloader/sourceforge-dl
      - --save-dir
      - /sourceforge-downloader/assets
      - --domain
      - ${SOURCEFORGE_DL_DOMAIN}
      - --cron
      - ${SOURCEFORGE_DL_CRON}
      - ${SOURCEFORGE_DL_RSS_URL}
      - ${SOURCEFORGE_DL_USER_ID}
      - ${SOURCEFORGE_DL_TOKEN}
    volumes:
      - type: bind
        source: ${SOURCEFORGE_DL_ASSETS}
        target: /sourceforge-downloader/assets
        read_only: false
    networks:
      my_net:
        ipv4_address: ${SOURCEFORGE_DL_IP}
  my_nextcloud:
    image: nextcloud/all-in-one:latest
    init: true
    restart: unless-stopped
    container_name: nextcloud-aio-mastercontainer
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - APACHE_PORT=11000
      - APACHE_IP_BINDING=0.0.0.0
    networks:
      my_net:
        ipv4_address: ${NEXTCLOUD_IP}
    ports:
      - 8080:8080
